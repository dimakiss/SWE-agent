
diff --git a/solution.py b/solution.py
new file mode 100644
index 0000000..fe0b894
--- /dev/null
+++ b/solution.py
@@ -0,0 +1,18 @@
+class Solution:
+    def maximumStrength(self, nums, k):
+        # Helper function to calculate the sum of subarray
+        def subarray_sum(start, end):
+            return sum(nums[start:end+1])
+
+        # Dynamic programming approach to find the maximum strength
+        n = len(nums)
+        dp = [[0] * (k + 1) for _ in range(n + 1)]
+        
+        for i in range(1, n + 1):
+            for j in range(1, min(k, i) + 1):
+                for p in range(i):
+                    current_sum = subarray_sum(p, i - 1)
+                    sign = 1 if j % 2 == 1 else -1
+                    dp[i][j] = max(dp[i][j], dp[p][j - 1] + sign * current_sum * (k - j + 1))
+        
+        return dp[n][k]
